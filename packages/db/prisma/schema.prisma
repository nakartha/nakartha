// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Provider {
  EMAIL
  GOOGLE
  GITHUB
  DISCORD
}

model User {
  id            Int        @id @default(autoincrement())
  email         String     @unique
  name          String?
  password      String? // Optional because OAuth users might not have a password
  image         String? // Profile image URL
  emailVerified DateTime?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime?  @updatedAt
  isActive      Boolean    @default(true)
  userRoles     UserRole[]
  provider      Provider   @default(GOOGLE)
}

model Role {
  id          Int        @id @default(autoincrement())
  name        String     @unique
  description String?
  permissions Json? // Store permissions as a JSON object
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  userRoles   UserRole[]
}

model UserRole {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  role      Role     @relation(fields: [roleId], references: [id], onDelete: Cascade)
  roleId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, roleId])
}
